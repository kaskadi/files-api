handler: lambdas/get-signed-url/get-signed-url.handler
name: get-signed-url
layers:
  - { Ref: ApiLayerLambdaLayer }
package:
  include:
    - lambdas/get-signed-url/get-signed-url.js
    - lambdas/get-signed-url/helpers/**
events:
  - http:
      method: get
      path: get-signed-url
      cors: true
      authorizer:
        type: COGNITO_USER_POOLS
        authorizerId: !Ref CognitoAuthorizer
      kaskadi-docs:
        description: This endpoint provides a way for users to get signed URLs that allows them to upload content into Kaskadi's public AWS S3 bucket.
        queryStringParameters:
          - key: key
            description: Key of the item you would like to upload on S3. Uses `/` as a separator to define pseudo-folder structure to create on S3. **This parameter is required!**
        examples:
          - request:
              queryStringParameters:
                key: imgs/apple.png
            response:
              statusCode: 200
              headers:
                'Access-Control-Allow-Origin': '*'
              body:
                presignedUrl: https://some.signed.url/to/upload/file?where=in_cdn
                imgUrl: https://cdn.klimapartner.net/imgs/apple.png
          - request: {}
            response:
              statusCode: 400
              headers:
                'Access-Control-Allow-Origin': '*'
              body:
                message: Please provide a key parameter in your query string for the key of the file you would like to upload.